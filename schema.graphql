type Category @entity {
  id: ID!
  metadataHash: Bytes!
  tokens: [String!]!
  indexPools: [IndexPool!]! @derivedFrom(field: "category")
}

type Token @entity {
  # id is token address
  id: ID!
  category: Category!
}

type DailyPoolSnapshot @entity {
  id: ID!
  timestamp: Int!
  tokens: [Token!]!
  balances: [BigInt!]!
  pool: IndexPool!
}

type PoolUnderlyingToken @entity {
  # id is poolAddress-tokenAddress
  id: ID!
  pool: IndexPool!
  balance: BigInt!
  token: Token!
  denorm: BigInt!
  desiredDenorm: BigInt!
}

type IndexPoolBalance @entity {
  # id is bal-poolAddress-ownerAddress
  id: ID!
  pool: IndexPool!
  balance: BigInt!
}

type IndexPool @entity {
  # id is index pool address
  id: ID!
  category: Category!
  size: Int!
  tokens: [PoolUnderlyingToken!]! @derivedFrom(field: "pool")
  balances: [IndexPoolBalance!]! @derivedFrom(field: "pool")
  totalWeight: BigInt!
  totalSupply: BigInt!
  dailySnapshots: [DailyPoolSnapshot!]! @derivedFrom(field: "pool")
}