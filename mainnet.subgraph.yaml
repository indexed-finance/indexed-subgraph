specVersion: 0.0.2
description: Indexed
repository: https://github.com/indexed-finance/indexed-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: SigmaControllerV1
    network: mainnet
    source:
      address: '0x5b470a8c134d397466a1a603678dadda678cbc29'
      abi: SigmaControllerV1
      startBlock: 11945598
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - IndexPool
        - PoolUnderlyingToken
        - Category
        - CategoryManager
        - Token
      abis:
        - name: IPool
          file: ./abis/IPool.json
        - name: SigmaControllerV1
          file: ./abis/SigmaControllerV1.json
        - name: PoolInitializer
          file: ./abis/PoolInitializer.json
        - name: UnboundTokenSeller
          file: ./abis/UnboundTokenSeller.json
        - name: IERC20
          file: ./abis/IERC20.json
        - name: Pair
          file: ./abis/Pair.json
        - name: Factory
          file: ./abis/Factory.json
      eventHandlers:
        - event: NewPoolInitializer(address,address,uint256,uint256)
          handler: handleNewPool
        - event: PoolInitialized(address,address,uint256,uint256)
          handler: handlePoolInitialized
        - event: TokenListAdded(uint256,bytes32,address,uint128,uint128)
          handler: handleNewTokenList
        - event: TokenAdded(address,uint256)
          handler: handleTokenAdded
        - event: TokenRemoved(address,uint256)
          handler: handleTokenRemoved
        - event: TokenListSorted(uint256)
          handler: handleTokenListSorted
      file: ./src/mappings/sigma-v1-mapping.ts
  - kind: ethereum/contract
    name: MarketCapSqrtController
    network: mainnet
    source:
      address: '0xF00A38376C8668fC1f3Cd3dAeef42E0E44A7Fcdb'
      abi: MarketCapSqrtController
      startBlock: 11372000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - IndexPool
        - PoolUnderlyingToken
        - Category
        - CategoryManager
        - Token
      abis:
        - name: IPool
          file: ./abis/IPool.json
        - name: MarketCapSqrtController
          file: ./abis/MarketCapSqrtController.json
        - name: PoolInitializer
          file: ./abis/PoolInitializer.json
        - name: UnboundTokenSeller
          file: ./abis/UnboundTokenSeller.json
        - name: IERC20
          file: ./abis/IERC20.json
        - name: Pair
          file: ./abis/Pair.json
        - name: Factory
          file: ./abis/Factory.json
      eventHandlers:
        - event: NewPoolInitializer(address,address,uint256,uint256)
          handler: handleNewPool
        - event: PoolInitialized(address,address,uint256,uint256)
          handler: handlePoolInitialized
        - event: CategoryAdded(uint256,bytes32)
          handler: handleNewCategory
        - event: TokenAdded(address,uint256)
          handler: handleTokenAdded
        - event: TokenRemoved(address,uint256)
          handler: handleTokenRemoved
        - event: CategorySorted(uint256)
          handler: handleCategorySorted
      file: ./src/mappings/controller-mapping.ts
  - kind: ethereum/contract
    name: GovernorAlpha
    network: mainnet
    source:
      address: '0x95129751769f99CC39824a0793eF4933DD8Bb74B'
      abi: GovernorAlpha
      startBlock: 11457782
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Proposal
        - Vote
      abis:
        - name: GovernorAlpha
          file: ./abis/GovernorAlpha.json
        - name: Timelock
          file: ./abis/Timelock.json
      eventHandlers:
        - event: ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)
          handler: createProposal
        - event: VoteCast(address,uint256,bool,uint256)
          handler: handleVote
        - event: ProposalCanceled(uint256)
          handler: cancelProposal
        - event: ProposalQueued(uint256,uint256)
          handler: queueProposal
        - event: ProposalExecuted(uint256)
          handler: executeProposal
      file: ./src/mappings/dao-mapping.ts
  - kind: ethereum/contract
    name: Ndx
    network: mainnet
    source:
      address: '0x86772b1409b61c639EaAc9Ba0AcfBb6E238e5F83'
      abi: Ndx
      startBlock: 11457421
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - DailyDistributionSnapshot
      abis:
        - name: Ndx
          file: ./abis/Ndx.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: DelegateVotesChanged(indexed address,uint256,uint256)
          handler: handleDelegateVoteChange
        - event: DelegateChanged(indexed address,indexed address,indexed address)
          handler: handleDelegateChanged
      file: ./src/mappings/ndx-mapping.ts
  - kind: ethereum/contract
    name: StakingRewardsFactory
    network: mainnet
    source:
      address: '0x48887E27e3E42e769F34e1e43E857235035d333a'
      abi: StakingRewardsFactory
      startBlock: 11458705
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - NdxStakingPool
      abis:
        - name: StakingRewardsFactory
          file: ./abis/StakingRewardsFactory.json
      eventHandlers:
        - event: IndexPoolStakingRewardsAdded(address,address)
          handler: handleIndexPoolRewardsAdded
        - event: UniswapStakingRewardsAdded(address,address,address)
          handler: handleUniswapStakingRewardsAdded
      file: ./src/mappings/staking-factory-mapping.ts
  - kind: ethereum/contract
    name: SigmaRewardsFactory
    network: mainnet
    source:
      address: '0x4246863cf318f930a955f4bab2a9277c21e3b0bb'
      abi: SigmaRewardsFactory
      startBlock: 11959538
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - NdxStakingPool
      abis:
        - name: SigmaRewardsFactory
          file: ./abis/SigmaRewardsFactory.json
      eventHandlers:
        - event: UniswapStakingRewardsAdded(address,address,address)
          handler: handleUniswapStakingRewardsAdded
      file: ./src/mappings/sigma-staking-mapping.ts
templates:
  - name: UnboundTokenSeller
    kind: ethereum/contract
    network: mainnet
    source:
      abi: UnboundTokenSeller
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - IndexPool
        - InitializerToken
        - DailyPoolSnapshot
        - Token
        - TokenForSale
      abis:
        - name: UnboundTokenSeller
          file: ./abis/UnboundTokenSeller.json
      eventHandlers:
        - event: PremiumPercentSet(uint8)
          handler: handlePremiumSet
        - event: NewTokensToSell(indexed address,uint256)
          handler: handleNewTokensToSell
        - event: SwappedTokens(indexed address,indexed address,uint256,uint256)
          handler: handleTokenSwap
      file: ./src/mappings/token-seller-mapping.ts
  - name: PoolInitializer
    kind: ethereum/contract
    network: mainnet
    source:
      abi: PoolInitializer
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - IndexPool
        - InitializerToken
        - DailyPoolSnapshot
        - Token
        - PoolInitializer
        - TokenContribution
      abis:
        - name: PoolInitializer
          file: ./abis/PoolInitializer.json
        - name: IERC20
          file: ./abis/IERC20.json
      eventHandlers:
        - event: TokensContributed(address,address,uint256,uint256)
          handler: handleTokensContributed
        - event: TokensClaimed(address,uint256)
          handler: handleTokensClaimed
      file: ./src/mappings/initializer-mapping.ts
  - name: IPool
    kind: ethereum/contract
    network: mainnet
    source:
      abi: IPool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - IndexPool
        - IndexPoolBalance
        - PoolUnderlyingToken
        - DailyPoolSnapshot
      abis:
        - name: IPool
          file: ./abis/IPool.json
        - name: IERC20
          file: ./abis/IERC20.json
        - name: Pair
          file: ./abis/Pair.json
        - name: Factory
          file: ./abis/Factory.json
      eventHandlers:
        - event: LOG_SWAP(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleSwap
        - event: LOG_JOIN(indexed address,indexed address,uint256)
          handler: handleJoin
        - event: LOG_EXIT(indexed address,indexed address,uint256)
          handler: handleExit
        - event: LOG_DENORM_UPDATED(indexed address,uint256)
          handler: handleDenormUpdated
        - event: LOG_DESIRED_DENORM_SET(indexed address,uint256)
          handler: handleDesiredDenormSet
        - event: LOG_TOKEN_REMOVED(address)
          handler: handleTokenRemoved
        - event: LOG_TOKEN_ADDED(indexed address,uint256,uint256)
          handler: handleTokenAdded
        - event: LOG_MINIMUM_BALANCE_UPDATED(address,uint256)
          handler: handleUpdateMinimumBalance
        - event: LOG_TOKEN_READY(indexed address)
          handler: handleTokenReady
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: LOG_SWAP_FEE_UPDATED(uint256)
          handler: handleSwapFeeUpdated
      file: ./src/mappings/pool-mapping.ts
  - name: StakingRewards
    kind: ethereum/contract
    network: mainnet
    source:
      abi: StakingRewards
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - NdxStakingPool
      abis:
        - name: StakingRewards
          file: ./abis/StakingRewards.json
      eventHandlers:
        - event: RewardAdded(uint256)
          handler: handleRewardAdded
        - event: Staked(indexed address,uint256)
          handler: handleStaked
        - event: Withdrawn(indexed address,uint256)
          handler: handleWithdrawn
        - event: RewardPaid(indexed address,uint256)
          handler: handleRewardPaid
      file: ./src/mappings/staking-mapping.ts